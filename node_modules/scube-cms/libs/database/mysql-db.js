// Include mysql
var mysql    =  require('mysql');
var mongodb  = require('mongodb');
var MongoClient = mongodb.MongoClient;

// Database connection reference
var dbConnect = null;

module.exports = function(dbServer) {

  if(dbServer === 'openshift') {

     // Return connection object if already exists
     if(dbConnect !== null ) {
        return dbConnect;
      }

      var config = dbConfig[dbServer];

      // Fetch Prd / Dev config appropriately
      config = (process.env.OPENSHIFT_MYSQL_DB_HOST) ? config.prd : config.dev;

      // Instantiate connection object
      dbConnect = mysql.createConnection({
        host: config.host,
        user: config.username,
        password: config.password,
        database: config.database,
        port: config.port
      });

      dbConnect.connect();

      console.log('Configuring scube with '+dbServer+' database at IP : '+config.host+' Port : '+config.port);
      return dbConnect;

  } else if (dbServer === 'openshift_mongo') {
    
    // Return connection object if already exists
    if(dbConnectMongo !== null ) {
        return ;//dbConnectMongo;
    }

    var config = dbConfig[dbServer];

      // Fetch Prd / Dev config appropriately
      config = (process.env.OPENSHIFT_MONGODB_DB_HOST) ? config.prd : config.dev;

      connection_string = 'mongodb://' +config.username + ":" +
                          config.password + "@" +
                          config.host  + ':' +
                          config.port + '/' +
                          config.database;
      MongoClient.connect(connection_string, function (err, db) {
        if(err) {
          console.log('Unable to connect to the mongoDB server. Error:' + err);
        } else {
          console.log('Configuring scube with '+dbServer+' database at IP : '+config.host+' Port : '+config.port);
          dbConnectMongo = db; // Setting the global variable db handle
          return;;
        }
      });
  } else {
    console.log('Failure - Invalid DB name provided for configuration');
  }
}
