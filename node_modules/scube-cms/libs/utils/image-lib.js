/* global DEFS */
/* global cloudinary */

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////
var imageLibrary = function() {

  // This function is used to return URLS of images
  this.getAllImageUrls = function(reqArray, callback) {

    console.log("SCUBE-IMAGE-LOG: The public ID for the uploaded image: "+ reqArray.public_id);
    
    var urlArray = [];
    var orgWidth = reqArray.orginalImageWidth;
    var orgHeight = reqArray.orginalImageHeight;
    var baseVersionWidth  = 0;
    var baseVersionHeight = 0;
    var ldpiVersionWidth  = 0;
    var hdpiVersionWidth  = 0;
    var ldpiVersionHeight = 0;
    var hdpiVersionHeight = 0;

    if(orgWidth >= orgHeight) { // Image is of higher width to height ratio ex: 3:2 (w:h)
        baseVersionHeight = Math.round(orgHeight * DEFS.CONST.IMAGE_ANDROID_BASELINE_WIDTH/orgWidth);
        baseVersionWidth = DEFS.CONST.IMAGE_ANDROID_BASELINE_WIDTH;
        //console.log("Orginal Width = " + orgWidth+ ", Original Height = " +orgHeight);
        //console.log("Base Version Width = " + baseVersionWidth+ ", Base Version Height = " +baseVersionHeight);
    } else { // Image is of higher height to width ratio ex: 2:3 (w:h)
        baseVersionWidth  = Math.round(orgWidth * DEFS.CONST.IMAGE_ANDROID_BASELINE_HEIGHT/orgHeight);
        baseVersionHeight = DEFS.CONST.IMAGE_ANDROID_BASELINE_HEIGHT;
        //console.log("Orginal Width = " + orgWidth+ ", Original Height = " +orgHeight);
        //console.log("Base Version Width = " + baseVersionWidth+ ", Base Version Height = " +baseVersionHeight);
    }
    ldpiVersionWidth  = Math.round(0.75*baseVersionWidth);
    ldpiVersionHeight = Math.round(0.75*baseVersionHeight);

    hdpiVersionWidth = Math.round(1.5*baseVersionWidth);
    hdpiVersionHeight = Math.round(1.5*baseVersionHeight);
    
    urlArray['ldpiUrl'] = cloudinary.url(reqArray.public_id,{ width: ldpiVersionWidth, height: ldpiVersionHeight});
    urlArray['mdpiUrl'] = cloudinary.url(reqArray.public_id,{ width: baseVersionWidth, height: baseVersionHeight});
    urlArray['hdpiUrl'] = cloudinary.url(reqArray.public_id,{ width: hdpiVersionWidth, height: hdpiVersionHeight});
    //console.log(urlArray.hdpiUrl);
    callback(urlArray);
    return;
  }
};
module.exports = imageLibrary;
